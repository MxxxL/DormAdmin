<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaiyu.dao.DormDao">

    <resultMap id="baseResultMap" type="com.kaiyu.entity.Dorm">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="buildingId" column="building_id"/>
        <result property="maxNum" column="max_num"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <resultMap id="related" extends="baseResultMap" type="com.kaiyu.entity.Dorm">
        <association property="building" javaType="com.kaiyu.entity.Building">
            <id property="id" column="bid"/>
            <result property="name" column="bname"/>
        </association>
    </resultMap>

    <insert id="saveDorm">
        insert into dorm(name, building_id, max_num, remark)
        VALUES (#{name}, #{buildingId}, #{maxNum}, #{remark})
    </insert>

    <update id="editDorm">
        update dorm
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="buildingId != null and buildingId != ''">
                building_id = #{buildingId},
            </if>
            <if test="maxNum != null and maxNum != ''">
                max_num = #{maxNum},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteDorms" parameterType="integer">
        delete from dorm
        where id in
        <foreach collection="ids" item="idsItem" open="(" separator="," close=")">
            #{idsItem}
        </foreach>
    </delete>

    <select id="getDormAll" resultMap="baseResultMap">
        select id, name, building_id, max_num, remark
        from dorm
    </select>

    <select id="getDormByName" resultMap="related">
        select d.id, d.name, d.building_id, d.max_num, d.remark, b.id as bid,b.name as bname
        from dorm d
        left join building b on b.id = d.building_id
        <where>
            <if test="dormName!=null and dormName!=''">
                d.name like CONCAT('%',#{dormName},'%')
            </if>
        </where>
    </select>


</mapper>